@using WebMatrix.WebData;
@{
    // Redirect to error if not authenticated
    if (!WebSecurity.IsAuthenticated || !UserHelper.IsAdmin()) {
        Response.RedirectPermanent("~/ThankYou"); return;
    }

    var action = Request.QueryString["action"];
    var redir  = Request.QueryString["redir"];

    if (action == "cancel")
    {
        var reqID = Request.QueryString["req"];
        if (reqID != null) { LibraryHelper.CancelRequest(reqID.AsInt()); }
    }
    else if (action == "disablepiece")
    {
        var piece = Request.QueryString["id"];
        if (piece != null) { LibraryHelper.SetPieceFlags(piece, false, false); }
    }
    else if (action == "disablepart")
    {
        var part = Request.QueryString["id"];
        if (part != null) { LibraryHelper.HidePart(part); }
    }
    else if (action == "disablegroup")
    {
        var group = Request.QueryString["id"];
        if (group.AsInt() == Website.Library_Orchestra || group.AsInt() == Website.Library_Choir) {
            Response.Redirect("~/ThankYou?err=InvalidOperationException&desc=Cannot%20remove%20primary%20groups");
        }
        else if (group != null) { LibraryHelper.HideGroup(group); }
    }
    else if (action == "removesuggestion")
    {
        var suggestion = Request.QueryString["id"];
        if (suggestion != null) { Suggestions.Remove(suggestion.AsInt()); }
    }
    else if (action == "removemember")
    {
        var member = Request.QueryString["id"];
        var group = Request.QueryString["group"];
        LibraryHelper.RemoveMemberFromGroup(group.AsInt(), member);
    }

    if (redir == "TODO") { Response.RedirectPermanent("~/Admin/Loans"); }
    else if (redir == "pieces") { Response.RedirectPermanent("~/Admin/Library"); }
    else if (redir == "suggestions") { Response.RedirectPermanent("~/Admin/Suggestions"); }
    else if (redir == "parts") { Response.RedirectPermanent(Request.UrlReferrer.ToString()); }
    else if (redir == "groups") { Response.RedirectPermanent("~/Admin/Groups"); }
    else if (redir == "groupmembers") { Response.RedirectPermanent(Request.UrlReferrer.ToString()); }

}

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title></title>
    </head>
    <body>
        <h1>Please wait...</h1>
    </body>
</html>
