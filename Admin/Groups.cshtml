@using WebMatrix.WebData;
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Manage Groups";

    if (!UserHelper.IsAdmin()) {
        Response.RedirectPermanent("~/");
    }

    Validation.RequireField("name", "You must specify the group name.");
    Validation.RequireField("desc", "You must give a group description.");

    bool errName = !ModelState.IsValidField("name");
    bool errDescription = !ModelState.IsValidField("desc");

    if (IsPost)
    {
        if (Request.Form["function"] == "add-group" && Validation.IsValid())
        {
            AntiForgery.Validate();

            int id = LibraryHelper.AddGroup(
                Request.Form["name"],
                Request.Form["desc"],
                UserHelper.GetUser().UUN,
                Request.Form["active"] == "on",
                Request.Form["cansuggest"] == "on");

            // Redirect to parts page for new piece
            Response.Redirect(String.Format("~/Admin/GroupMembers?groupID={0}&groupName={1}",
                id.ToString(), Uri.EscapeDataString(Request.Form["name"])));
        }
        else if (Request.Form["function"] == "set-group")
        {
            var groupFlags = Request.Form.Cast<string>().Where(k => k != "function")
                .ToLookup(k => k.Split('-')[0], k => k.Split('-')[1]);

            foreach (string id in groupFlags.Select(g => g.Key))
            {
                LibraryHelper.SetGroupFlags(id, groupFlags[id].Contains("active"),
                    groupFlags[id].Contains("cansuggest"), true);
            }
        }
    }

    var groups = LibraryHelper.GetGroups();

}

<div>
    <hgroup class="title">
        <h1>Administration.</h1>
        <h2>View and manage the online library.</h2>
    </hgroup>
    <section>
        <h2>Add New Group</h2>
        <p>Entries in bold are required. The rest are optional and can be left blank.</p>
        <p>Hover over an input to see a further description.</p>
        <form method="post" enctype="multipart/form-data">
            <input type="hidden" name="function" value="add-group" />
            @AntiForgery.GetHtml()
            <table>
                <tr title="The name of the group">
                    <td><b @if (errName) { <text> class="error-label" </text> }>Name</b></td>
                    <td><input type="text" name="name" @Validation.For("name")></td>
                </tr>
                <tr title="A description of the group (this will make finding the appropriate group easier)">
                    <td><b @if (errDescription) { <text> class="error-label" </text> }>Description</b></td>
                    <td><input type="text" name="desc" @Validation.For("desc") /></td>
                </tr>
                <tr title="Is the group active (visible to members)">
                    <td><b>Is Active</b></td>
                    <td><input type="checkbox" name="active" checked /></td>
                </tr>
                <tr title="Whether to allow users to suggest pieces for this group">
                    <td><b>Allow Suggestions</b></td>
                    <td><input type="checkbox" name="cansuggest" checked /></td>
                </tr>
            </table>
            <br/>
            @Html.ValidationSummary("Please re-enter any incorrect inputs before continuing.", excludeFieldErrors: false, htmlAttributes: null)
            <input type="submit" value="Add Group">
        </form>
    </section>
    <br />
    <section>
        <h2>All Groups</h2>
        <br />
        <form method="post" id="form">
            <input type="hidden" name="function" value="set-group" />
            <style>
                .table-band { background-color: #DDD }
            </style>
            <table>
                <tr>
                    <td><b>Name</b></td>
                    <td><b>Description</b></td>
                    <td><b>Creator</b></td>
                    <td><b>Members</b></td>
                    <td><b>Is Active</b></td>
                    <td><b>Allow Suggestions</b></td>
                    <td></td>
                    <td></td>
                </tr>

                @{ bool color = true; }
                @foreach (var row in groups)
                {
                    color = !color;
                    <tr class="@(color?"table-band":"")" >
                        <td>@row.Name</td>
                        <td>@row.Description</td>
                        <td>@row.Creator.FirstName @row.Creator.LastName</td>
                        <td>@LibraryHelper.CountGroupMembers(row.ID)</td>
                        <td><input type="checkbox" name="@row.ID-active" @(row.Active ? "checked" : "") /></td>
                        <td><input type="checkbox" name="@row.ID-cansuggest" @(row.CanSuggest ? "checked" : "") /></td>
                        <td>
                            <a href="~/Admin/GroupMembers?groupID=@row.ID&groupName=@Uri.EscapeDataString(row.Name)">Members</a>
                        </td>
                        <td>
                            @if (row.ID != Website.Library_Orchestra && row.ID != Website.Library_Choir) {
                            <a href="~/Admin/do?redir=groups&action=disablegroup&id=@row.ID"
                               onclick="return confirm('Are you sure you wish to remove this group?')">Remove</a>
                            }
                            <input type="hidden" name="@row.ID-id" />
                        </td>
                    </tr>
                }
            </table>
            <br />
            <input type="submit" value="Update Groups" />
        </form>
    </section>

</div>